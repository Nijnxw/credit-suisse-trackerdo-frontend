{"version":3,"sources":["components/dashboard/NavigationBar.js","components/dashboard/SideBar.js","components/commons/PageContainer.js","components/commons/controls/DatePicker.js","components/commons/controls/Button.js","components/commons/controls/Controls.js","components/commons/controls/Input.js","components/commons/useForm.js","components/task/AddTaskForm.js","components/task/AddTask.js","components/task/EditTask.js","components/task/ViewTask.js","components/commons/CustomTable/index.js","components/inbox/ShowInbox.js","components/inbox/index.js","components/notifications/index.js","components/progress/index.js","components/today/index.js","components/upcoming/index.js","components/dashboard/index.js","components/Application.js","reportWebVitals.js","index.js"],"names":["NavigationBar","className","align","Alignment","LEFT","activeClassName","classNames","Classes","BUTTON","to","icon","IconNames","BOOK","RIGHT","TRENDING_UP","PLUS","NOTIFICATIONS","items","name","label","Inbox","path","Today","DateRange","AssessmentOutlined","NotificationsOutlined","SideBar","List","disablePadding","dense","map","rest","ListItem","button","Icon","component","ListItemText","PageContainer","props","children","showSideBar","SideBarComponent","NavBarComponent","DatePicker","value","onChange","utils","DateFnsUtils","disableToolbar","variant","inputVariant","format","date","target","convertToDefEventPara","useStyle","makeStyles","theme","root","margin","spacing","textTransform","Controls","Input","TextField","Button","text","size","color","onClick","other","classes","labe","useForm","initialValues","useState","values","setValues","handleInputChange","event","width","Form","onSubmit","title","dueDate","Date","description","AddTaskForm","e","console","log","Grid","container","item","xs","required","multiline","id","type","pageContent","padding","AddTask","Paper","elevation","EditTask","ViewTask","createData","status","due_date","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","headCells","numeric","isDate","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","primary","dark","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","Tooltip","IconButton","aria-label","useStyles","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","CustomTable","data","React","setOrder","setOrderBy","selected","setSelected","page","setPage","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","TableContainer","Table","aria-labelledby","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","isSelected","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","ShowInbox","redirectTo404","exact","Notifications","Progress","Upcoming","redirectToInbox","Dashboard","render","toDashboard","Application","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0bf5b26.chunk.js","sourcesContent":["import { Alignment, Classes, Icon, Navbar, NavbarDivider, NavbarGroup, NavbarHeading } from '@blueprintjs/core'\nimport { IconNames } from '@blueprintjs/icons'\nimport classNames from 'classnames'\nimport * as React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst NavigationBar = () => {\n  return (\n    <Navbar className=\"NavigationBar primary-navbar pt-dark\">\n      <NavbarGroup align={Alignment.LEFT}>\n        <NavLink\n          activeClassName=\"pt-active\"\n          className={classNames(\"NavigationBar__link pt-button pt-minimal\", Classes.BUTTON)}\n          to=\"/\"\n        >\n          <Icon icon={IconNames.BOOK} />\n          <NavbarHeading className=\"hidden-xs\">Trackerdo</NavbarHeading>\n        </NavLink>\n      </NavbarGroup>\n\n      <NavbarGroup align={Alignment.RIGHT}>\n        <NavLink\n          activeClassName=\"pt-active\"\n          className=\"NavigationBar__link pt-button pt-minimal\"\n          to=\"/app/progress\"\n        >\n          <Icon icon={IconNames.TRENDING_UP} />\n        </NavLink>\n\n        <div className=\"hidden-xs\">\n          <NavbarDivider className=\"default-divider\" />\n        </div>\n\n        <NavLink\n          activeClassName=\"pt-active\"\n          className=\"NavigationBar__link pt-button pt-minimal\"\n          to=\"/app/inbox/add-task\"\n        >\n          <Icon icon={IconNames.PLUS} />\n        </NavLink>\n        \n        <div className=\"hidden-xs\">\n          <NavbarDivider className=\"default-divider\" />\n        </div>\n\n        <NavLink\n          activeClassName=\"pt-active\"\n          className=\"NavigationBar__link pt-button pt-minimal\"\n          to=\"/app/notifications\"\n        >\n            <Icon icon={IconNames.NOTIFICATIONS} />\n        </NavLink>\n\n        <div className=\"hidden-xs\">\n          <NavbarDivider className=\"default-divider\" />\n        </div>\n        \n        {/* TODO: profiling menu here after authentication */}\n\n      </NavbarGroup>\n    </Navbar>\n  )\n}\n\nexport default NavigationBar;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Icon, List, ListItem, ListItemText } from '@material-ui/core'\nimport { AssessmentOutlined, DateRange, Inbox, NotificationsOutlined, Today } from '@material-ui/icons'\n\nconst items = [\n  { name: 'inbox', label: 'Inbox', icon: Inbox, path: '/app/inbox' },\n  { name: 'today', label: 'Today', icon: Today, path: '/app/today' },\n  { name: 'upcoming', label: 'Upcoming', icon: DateRange, path: '/app/upcoming' },\n  { name: 'progress', label: 'Progress', icon: AssessmentOutlined, path: '/app/progress' },\n  { name: 'notifications', label: 'Notifications', icon: NotificationsOutlined, path: '/app/notifications' },\n]\n\nconst SideBar = () => {\n  return (\n    <div className=\"SideBar\">\n      <List disablePadding dense>\n        {items.map(({ label, name, icon, path, ...rest }) => (\n          <ListItem key={name} button {...rest}>\n            <NavLink\n              activeClassName=\"pt-active\"\n              className=\"SideBar__link menu-item\"\n              to={path}\n            >\n              <Icon component={icon} />\n              <ListItemText className=\"menu-item-label\">{label}</ListItemText>\n            </NavLink>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  )\n}\n\nexport default SideBar;\n","import React, { Fragment } from \"react\"\nimport NavigationBar from \"../dashboard/NavigationBar\"\nimport SideBar from \"../dashboard/SideBar\"\n\nconst PageContainer = (props) => {\n  const { \n    children,\n    className = \"\",\n    showSideBar = false,\n    SideBarComponent,\n    NavBarComponent,\n  } = props\n  return (\n    <Fragment>\n      <header>\n      {NavBarComponent || <NavigationBar />}\n      </header>\n      <main>\n        <div className=\"PageContainer\">\n          {showSideBar && (SideBarComponent || <SideBar />)}\n          <div className={`page ${className}`}>\n            {children}\n          </div>\n        </div>\n      </main>\n      <footer />\n    </Fragment>\n  )\n}\n\nexport default PageContainer;\n","import React from 'react'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nfunction DatePicker(props) {\n  const { name, label, value, onChange } = props\n\n  const convertToDefEventPara = (name, value) => ({\n    target: {\n      name, value\n    }\n  })\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker disableToolbar variant='inline' inputVariant='outlined' \n        label={label}\n        format='dd MMM yyyy'\n        name={name}\n        value={value}\n        onChange={date => onChange(convertToDefEventPara(name, date))}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default DatePicker\n","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(0.5)\n  },\n  label: {\n    textTransform: 'none'\n  }\n}))\n\nexport default function Button(props) {\n  const { text, size, color, variant, onClick, ...other } = props\n  const classes = useStyle()\n  return (\n    <MuiButton\n      variant={variant || 'contained'}\n      size={size || 'large'}\n      color={color || 'primary' }\n      onClick={onClick}\n      {...other}\n      classes={{root: classes.root, label: classes.labe}}\n    >\n      {text}\n    </MuiButton>\n  )\n}\n","import Input from './Input'\nimport DatePicker from './DatePicker'\nimport Button from './Button'\n\nconst Controls = {\n  Input,\n  DatePicker,\n  Button,\n}\n\nexport default Controls\n","import { TextField } from '@material-ui/core'\nimport React from 'react'\n\nexport default function Input(props) {\n  const { name, label, value, onChange } = props\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      name={name}\n      value={value}\n      onChange={onChange}\n      {...props}\n    />\n  )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialValues) {\n  const [values, setValues] = useState(initialValues)\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target\n    setValues({\n      ...values,\n      [name]: value,\n    })\n  }\n  return {\n    values,\n    setValues,\n    handleInputChange\n  }\n}\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(2)\n    }\n  }\n}))\n\nexport function Form(props) {\n  const { onSubmit, children } = props\n  const classes = useStyle()\n  return (\n    <form className={classes.root} onSubmit={onSubmit}>\n      {children}\n    </form>\n  )\n}\n","import { Grid } from \"@material-ui/core\"\nimport Controls from \"../commons/controls/Controls\"\nimport { Form, useForm } from \"../commons/useForm\"\n\n\nconst initialValues = {\n  title: '',\n  dueDate: new Date(),\n  description: '',\n}\n\nconst AddTaskForm = () => {\n  const {\n    values,\n    setValues,\n    handleInputChange\n  } = useForm(initialValues)\n\n  const handleReset = (e) => {\n    setValues(initialValues)\n  }\n\n  const handleSubmit = (e) => {\n    console.log(values)\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            required={true}\n            label=\"Task Name\"\n            name='title'\n            value={values.title}\n            onChange={handleInputChange}\n            variant=\"outlined\"\n          />\n          <Controls.Input\n            className='text-input'\n            required\n            multiline\n            id=\"outlined-required\"\n            label=\"Description\"\n            name='description'\n            value={values.description}\n            onChange={handleInputChange}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.DatePicker \n            name='dueDate'\n            label='Due Date'\n            value={values.dueDate}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <div>\n          <Controls.Button\n            type='submit'\n            text='Submit'\n          />\n          <Controls.Button\n            text='Reset'\n            color='default'\n            onClick={handleReset}\n          />\n        </div>\n      </Grid>\n    </Form>\n  )\n}\n\nexport default AddTaskForm\n","import { makeStyles, Paper } from \"@material-ui/core\"\nimport PageContainer from \"../commons/PageContainer\"\nimport AddTaskForm from \"./AddTaskForm\"\n\nconst useStyle = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  }\n}))\n\nconst AddTask = () => {\n  const classes = useStyle()\n  return (\n    <PageContainer className=\"AddTask\" showSideBar={true}>\n      <Paper className={classes.pageContent} elevation={3}>\n        <h1>Add New Task</h1>\n        <AddTaskForm />\n      </Paper>\n    </PageContainer>\n  )\n}\n\nexport default AddTask\n","import PageContainer from \"../commons/PageContainer\"\n\nconst EditTask = () => {\n  return (\n    <PageContainer className='EditTask' showSideBar={true}>\n      <h1>Edit Task</h1>\n    </PageContainer>\n  )\n}\n\nexport default EditTask\n","import PageContainer from \"../commons/PageContainer\"\n\nconst ViewTask = () => {\n  return (\n    <PageContainer className='ViewTask' showSideBar={true}>\n      <h1>ViewTask</h1>\n    </PageContainer>\n  )\n}\n\nexport default ViewTask\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(title, status, due_date, description) {\n  return { title, status, due_date, description };\n}\n\nconst rows = [\n  createData('Task 1', 70, \"2021-05-14\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"),\n  createData('Task 2', 30, \"2021-05-16\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"),\n  createData('Task 3', 30, \"2021-05-19\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"),\n  createData('Task 4', 30, \"2021-05-23\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"),\n  createData('Task 5', 30, \"2021-05-26\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"),\n  createData('Task 6', 30, \"2021-05-30\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"),\n  createData('Task 7', 30, \"2021-06-04\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"),\n  createData('Task 8', 30, \"2021-06-24\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"),\n  createData('Task 9', 30, \"2021-08-13\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"), \n  createData('Task 10', 30, \"2021-09-10\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'title', numeric: false, isDate: false, disablePadding: true, label: 'Task Name' },\n  { id: 'status', numeric: true, isDate: false, disablePadding: false, label: 'Status' },\n  { id: 'due_date', numeric: false, isDate: true, disablePadding: false, label: 'Due Date' },\n  { id: 'desc', numeric: false, isDate: false, disablePadding: false, label: 'Description' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all tasks' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : headCell.isDate ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, title } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          {title}\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst CustomTable = (props) => {\n  const {\n    data=rows,\n    title='Tasks',\n  } = props\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('due_date');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = data.map((n) => n.title);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, title) => {\n    const selectedIndex = selected.indexOf(title);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, title);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (title) => selected.indexOf(title) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} title={title}/>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.title);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.title)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.title}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.status}</TableCell>\n                      <TableCell align=\"center\">{row.due_date}</TableCell>\n                      <TableCell align=\"left\">{row.description}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n\nexport default CustomTable\n","\nimport CustomTable from \"../commons/CustomTable/index\";\nimport PageContainer from \"../commons/PageContainer\"\n\nconst ShowInbox = () => {\n  return (\n    <PageContainer className=\"ShowInbox\" showSideBar={true}>\n      <h1>Inbox</h1>\n      <CustomTable title='All tasks' />\n    </PageContainer>\n  )\n}\n\nexport default ShowInbox;\n","import * as React from 'react'\nimport { Redirect, Route, Switch } from 'react-router'\nimport AddTask from '../task/AddTask'\nimport EditTask from '../task/EditTask'\nimport ViewTask from '../task/ViewTask'\nimport ShowInbox from './ShowInbox'\n\nconst Inbox = () => (\n  <div className=\"Inbox\">\n    <Switch>\n      <Route exact path='/app/inbox' component={ShowInbox} />\n      <Route path='/app/inbox/add-task' component={AddTask} />\n      <Route path='/app/inbox/edit-task/:id' component={EditTask} />\n      <Route path='/app/inbox/view-task/:id' component={ViewTask} />\n      <Route component={redirectTo404} />\n    </Switch>\n  </div>\n)\n\nconst redirectTo404 = () => <Redirect to=\"/404\" />\n\nexport default Inbox\n","import PageContainer from \"../commons/PageContainer\"\n\nconst Notifications = () => {\n  return (\n    <PageContainer className=\"Notifications\" showSideBar={true}>\n      <h1>Notifications</h1>\n    </PageContainer>\n  )\n}\n\nexport default Notifications\n","import PageContainer from \"../commons/PageContainer\"\n\nconst Progress = () => {\n  return (\n    <PageContainer className=\"Progress\" showSideBar={true}>\n      <h1>Progress</h1>\n    </PageContainer>\n  )\n}\n\nexport default Progress\n","import CustomTable from \"../commons/CustomTable/index\"\nimport PageContainer from \"../commons/PageContainer\"\n\nconst Today = () => {\n  return (\n    <PageContainer className=\"Today\" showSideBar={true}>\n      <h1>Today</h1>\n      <CustomTable title='Overdued' />\n      <CustomTable title=\"Today's Task\" />\n    </PageContainer>\n  )\n}\n\nexport default Today\n","import CustomTable from \"../commons/CustomTable/index\"\nimport PageContainer from \"../commons/PageContainer\"\nimport Controls from \"../commons/controls/Controls\"\nimport { Form, useForm } from \"../commons/useForm\"\n\nconst initialValues = {\n  date: new Date(),\n}\n\nconst Upcoming = () => {\n  const {\n    values,\n    handleInputChange\n  } = useForm(initialValues)\n\n  const handleSubmit = (e) => {\n    console.log(values.date)\n  }\n\n  return (\n    <PageContainer className=\"Upcoming\" showSideBar={true}>\n      <h1>Upcoming</h1>\n      <div className='datePicker-container'>\n        <Form onSubmit={handleSubmit}>\n          <Controls.DatePicker \n            name='date'\n            label='List tasks until'\n            value={values.date}\n            onChange={handleInputChange}\n          />\n        </Form>\n      </div>\n      <CustomTable title='Upcoming' />\n    </PageContainer>\n  )\n}\n\nexport default Upcoming\n","import * as React from 'react'\nimport { Redirect, Route, Switch } from 'react-router';\nimport Inbox from '../inbox';\nimport Notifications from '../notifications';\nimport Progress from '../progress';\nimport Today from '../today';\nimport Upcoming from '../upcoming';\n\nconst Dashboard = () => (\n  <div className=\"Dashboard\">\n    <Switch>\n      <Route exact path='/app' render={redirectToInbox} />\n      <Route path='/app/inbox' component={Inbox} />\n      <Route path='/app/today' component={Today} />\n      <Route path='/app/upcoming' component={Upcoming} />\n      <Route path='/app/progress' component={Progress} />\n      <Route path='/app/notifications' component={Notifications} />\n      <Route component={redirectTo404} />\n    </Switch>\n  </div>\n)\n\nconst redirectToInbox = () => <Redirect to=\"/app/inbox\" />\nconst redirectTo404 = () => <Redirect to=\"/404\" />\n\nexport default Dashboard;\n","import { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./dashboard\";\n\nfunction Application() {\n  const redirectToDashboard = () => <Redirect to=\"/app\" />\n  return (\n    <Router>\n      <div className=\"Application\">\n        <div className=\"Application__main\">\n          <Switch>\n            <Route path='/app' component={toDashboard} />\n            <Route exact path='/' render={redirectToDashboard} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nconst toDashboard = () => <Dashboard />\n\nexport default Application;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport Application from './components/Application';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}