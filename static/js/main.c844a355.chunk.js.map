{"version":3,"sources":["components/dashboard/NavigationBar.js","components/dashboard/SideBar.js","components/commons/PageContainer.js","components/inbox/index.js","components/dashboard/index.js","components/Application.js","reportWebVitals.js","index.js"],"names":["NavigationBar","className","align","Alignment","LEFT","activeClassName","classNames","Classes","BUTTON","to","icon","IconNames","BOOK","RIGHT","TRENDING_UP","PLUS","NOTIFICATIONS","items","name","label","Inbox","Today","DateRange","AssessmentOutlined","NotificationsOutlined","SideBar","List","disablePadding","dense","map","rest","ListItem","button","Icon","component","ListItemText","PageContainer","children","showSideBar","redirectToInbox","redirectTo404","Dashboard","exact","path","render","toDashboard","Application","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c844a355.chunk.js","sourcesContent":["import { Alignment, Classes, Icon, Navbar, NavbarDivider, NavbarGroup, NavbarHeading } from '@blueprintjs/core'\nimport { IconNames } from '@blueprintjs/icons'\nimport classNames from 'classnames'\nimport * as React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst NavigationBar = () => {\n  return (\n    <Navbar className=\"NavigationBar primary-navbar pt-dark\">\n      <NavbarGroup align={Alignment.LEFT}>\n        <NavLink\n          activeClassName=\"pt-active\"\n          className={classNames(\"NavigationBar__link pt-button pt-minimal\", Classes.BUTTON)}\n          to=\"/\"\n        >\n          <Icon icon={IconNames.BOOK} />\n          <NavbarHeading className=\"hidden-xs\">Trackerdo</NavbarHeading>\n        </NavLink>\n      </NavbarGroup>\n\n      <NavbarGroup align={Alignment.RIGHT}>\n        <NavLink\n          activeClassName=\"pt-active\"\n          className=\"NavigationBar__link pt-button pt-minimal\"\n          to=\"/app/add-task\"\n        >\n          <Icon icon={IconNames.TRENDING_UP} />\n        </NavLink>\n\n        <div className=\"hidden-xs\">\n          <NavbarDivider className=\"default-divider\" />\n        </div>\n\n        <NavLink\n          activeClassName=\"pt-active\"\n          className=\"NavigationBar__link pt-button pt-minimal\"\n          to=\"/app/add-task\"\n        >\n          <Icon icon={IconNames.PLUS} />\n        </NavLink>\n        \n        <div className=\"hidden-xs\">\n          <NavbarDivider className=\"default-divider\" />\n        </div>\n\n        <NavLink\n          activeClassName=\"pt-active\"\n          className=\"NavigationBar__link pt-button pt-minimal\"\n          to=\"/app/add-task\"\n        >\n            <Icon icon={IconNames.NOTIFICATIONS} />\n        </NavLink>\n\n        <div className=\"hidden-xs\">\n          <NavbarDivider className=\"default-divider\" />\n        </div>\n        \n        {/* TODO: profiling menu here after authentication */}\n\n      </NavbarGroup>\n    </Navbar>\n  )\n}\n\nexport default NavigationBar;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Icon, List, ListItem, ListItemText } from '@material-ui/core'\nimport { AssessmentOutlined, DateRange, Inbox, NotificationsOutlined, Today } from '@material-ui/icons'\n\nconst items = [\n  { name: 'inbox', label: 'Inbox', icon: Inbox },\n  { name: 'today', label: 'Today', icon: Today },\n  { name: 'upcoming', label: 'Upcoming', icon: DateRange },\n  { name: 'progress', label: 'Progress', icon: AssessmentOutlined },\n  { name: 'notifications', label: 'Notifications', icon: NotificationsOutlined },\n]\n\nconst SideBar = () => {\n  return (\n    <div className=\"SideBar\">\n      <List disablePadding dense>\n        {items.map(({ label, name, icon, ...rest }) => (\n          <ListItem key={name} button {...rest}>\n            <NavLink\n              activeClassName=\"pt-active\"\n              className=\"SideBar__link menu-item\"\n              to=\"/app\"\n            >\n              <Icon component={icon} />\n              <ListItemText className=\"menu-item-label\">{label}</ListItemText>\n            </NavLink>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  )\n}\n\nexport default SideBar;\n","import React, { Fragment } from \"react\"\nimport NavigationBar from \"../dashboard/NavigationBar\";\nimport SideBar from \"../dashboard/SideBar\";\n\nconst PageContainer = ({ children, showSideBar = false, className}) => {\n  return (\n    <Fragment>\n      <header>\n        <NavigationBar />\n      </header>\n      <main>\n        <div className=\"PageContainer\">\n          {showSideBar && <SideBar />}\n          <div className={`page ${className}`}>\n            {children}\n          </div>\n        </div>\n      </main>\n      <footer />\n    </Fragment>\n  )\n}\n\nexport default PageContainer;\n","import PageContainer from \"../commons/PageContainer\"\n\nconst Inbox = () => {\n  return (\n    <PageContainer showSideBar={true} />\n  )\n}\n\nexport default Inbox;\n","import * as React from 'react'\nimport { Redirect, Route, Switch } from 'react-router';\nimport Inbox from '../inbox';\n\nconst Dashboard = () => (\n  <div className=\"Dashboard\">\n    <Switch>\n      <Route exact path='/app' render={redirectToInbox} />\n      <Route path='/app/inbox' component={Inbox} />\n      <Route component={redirectTo404} />\n    </Switch>\n  </div>\n)\n\nconst redirectToInbox = () => <Redirect to=\"/app/inbox\" />\nconst redirectTo404 = () => <Redirect to=\"/404\" />\n\nexport default Dashboard;\n","import { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./dashboard\";\n\nfunction Application() {\n  const redirectToDashboard = () => <Redirect to=\"/app\" />\n  return (\n    <Router>\n      <div className=\"Application\">\n        <div className=\"Application__main\">\n          <Switch>\n            <Route path='/app' component={toDashboard} />\n            <Route exact path='/' render={redirectToDashboard} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nconst toDashboard = () => <Dashboard />\n\nexport default Application;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport Application from './components/Application';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}